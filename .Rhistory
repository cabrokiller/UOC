all(eig$values > 0)
}
is_euclidean(sq_dist)
is_euclidean(df_dist)
is_euclidean <- function(diss){
mat <- as.matrix(diss)
n <- dim(mat)[1]
A <- mat * -(1/2)
H <- diag(n) - (1/n) * (rep(1,n) %*% t(rep(1,n)))
B <- H %*% A %*% H
# prueba
eig <- eigen(B)
all(eig$values > 0)
}
is_euclidean(df_dist)
all(eig$values >= 0)
is_euclidean <- function(diss){
mat <- as.matrix(diss)
n <- dim(mat)[1]
A <- mat * -(1/2)
H <- diag(n) - (1/n) * (rep(1,n) %*% t(rep(1,n)))
B <- H %*% A %*% H
# prueba
eig <- eigen(B)
all(eig$values >= 0)
}
is_euclidean(df_dist)
is_euclidean <- function(diss){
mat <- as.matrix(diss)
n <- dim(mat)[1]
A <- mat * -(1/2)
H <- diag(n) - (1/n) * (rep(1,n) %*% t(rep(1,n)))
B <- H %*% A %*% H
# prueba
eig <- eigen(B)
all(eig$values >= 0)
}
is_euclidean(df_dist)
diss <- df_dist
mat <- as.matrix(diss)
n <- dim(mat)[1]
A <- mat * -(1/2)
H <- diag(n) - (1/n) * (rep(1,n) %*% t(rep(1,n)))
B <- H %*% A %*% H
# prueba
eig <- eigen(B)
all(eig$values >= 0)
eig
B
B <- (H %*% A) %*% H
# prueba
eig <- eigen(B)
B
# prueba
eig <- eigen(B)
eig
cmdscale(B)
H
is_euclidean(df_dist)
is_euclidean(sq_dist)
diss <- df_dist
is_euclidean <- function(diss){
mat <- as.matrix(diss)
n <- dim(mat)[1]
A <- mat * -(1/2)
H <- diag(n) - (1/n) * (rep(1,n) %*% t(rep(1,n)))
B <- H %*% A %*% H
# prueba
eig <- eigen(B)
all(eig$values >= 0)
}
is_euclidean(sq_dist)
diss <- df_dist
is_euclidean <- function(diss){
mat <- as.matrix(diss)
n <- dim(mat)[1]
A <- mat * -(1/2)
H <- diag(n) - (1/n) * (rep(1,n) %*% t(rep(1,n)))
B <- H %*% A %*% H
# prueba
eig <- eigen(B)
all(eig$values >= 0)
}
# probamos con la raiz cuadrada de la distancia
is_euclidean(sq_dist)
get_clust_tendency(df, nrow(df)-1, graph = F)
fviz_dist(sq_dist, order = T, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
get_clust_tendency(df, nrow(df)-1, graph = F)$hopkins_stat
get_clust_tendency(df, nrow(df)-1, graph = F)$hopkins_stat
fviz_dist(sq_dist, order = T, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
fviz_dist(sq_dist, order = T, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"), cex = .5)
fviz_dist(sq_dist, order = T, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"), lab_size = .5)
fviz_dist(sq_dist, order = T, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"), lab_size = 1)
fviz_dist(sq_dist, order = T, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"), lab_size = 8)
fviz_dist(sq_dist, order = T, gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"), lab_size = 6)
solarized_pal()(2)
get_clust_tendency(df, nrow(df)-1, graph = F)$hopkins_stat
fviz_dist(sq_dist, order = T, gradient = list(low = "#268bd2", mid = "white", high = "#cb4b16"), lab_size = 6)
solarized_pal()(2)
solarized_pal()(3)
fviz_dist(sq_dist, order = T, gradient = list(low = "#268bd2", mid = "#dc322f", high = "#859900"), lab_size = 6)
fviz_dist(sq_dist, order = T, gradient = list(low = "#268bd2", mid = "#dc322f", high = "#cb4b16"), lab_size = 6)
fviz_dist(sq_dist, order = T, gradient = list(low = "#268bd2", mid = "#dc322f", high = "#cb4b16"), lab_size = 6)
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_brewer()
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c()
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_d()
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c()
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c()
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c(direction = -1)
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "A")
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "B")
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "C")
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "E")
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "A")
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "B")
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "A")
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "B")
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "A")
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c(direction = 1, option = "A")
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "A")
get_clust_tendency(df, nrow(df)-1, graph = F)$hopkins_stat
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "A")
get_clust_tendency(df, nrow(df)-1, graph = F)$hopkins_stat
fviz_dist(sq_dist, order = T, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "A")
fviz_dist(sq_dist, order = F, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "A")
fviz_dist(df_dist, order = F, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "A")
get_clust_tendency(df, nrow(df)-1, graph = F)$hopkins_stat
fviz_dist(sq_dist, order = F, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "A")
set.seed(41)
get_clust_tendency(df, nrow(df)-1, graph = F)$hopkins_stat
fviz_pca_ind(df)
fviz_pca_ind(prcomp(df))
View(df)
fviz_dist(sq_dist, order = F, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "A")
fviz_dist(sq_dist,, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "A")
fviz_dist(sq_dist, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "A")
set.seed(41)
get_clust_tendency(df, nrow(df)-1, graph = F)$hopkins_stat
fviz_dist(sq_dist, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "A")
set.seed(41)
get_clust_tendency(df, nrow(df)-1, graph = F)$hopkins_stat
fviz_dist(sq_dist, lab_size = 6) + scale_fill_viridis_c(direction = -1, option = "A")
clust_1 <- hclust(df_dist, method = "ward.D2")
clust_1 <- hclust(df_dist, method = "ward.D2")
fviz_dend(clust_1, cex = .5)
clust_1 <- hclust(sq_dist, method = "ward.D2")
fviz_dend(clust_1, cex = .5)
heatmap(as.matrix(df),
Rowv = NA,
Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256))
heatmap(as.matrix(df),
#Rowv = NA,
#Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256))
heatmap(as.matrix(df),
#Rowv = NA,
Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256))
heatmap(as.matrix(df),
Rowv = NA,
Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256))
heatmap(as.matrix(df),
# Rowv = NA,
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256))
heatmap(as.matrix(df),
# Rowv = NA,
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256), keep.dendro = F)
heatmap(as.matrix(df),
Rowv = clust_1,
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256))
clust_1 <- agnes(sq_dist, method = "ward.D2")
clust_1 <- agnes(sq_dist, method = "ward")
fviz_dend(clust_1, cex = .5)
clust_1 <- hcut(sq_dist, method = "ward")
clust_1 <- hcut(sq_dist)
fviz_dend(clust_1, cex = .5)
heatmap(as.matrix(df),
Rowv = clust_1,
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256))
heatmap(as.matrix(df),
Rowv = clust_1$cluster,
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256))
heatmap(as.matrix(df),
Rowv = clust_1$cluster)
heatmap(as.matrix(df))
heatmap(as.matrix(df))
heatmap(as.matrix(df),
Rowv = clust_1$cluster)
heatmap(sq_dist,
Rowv = clust_1$cluster)
heatmap(as.matrix(sq_dist),
Rowv = clust_1$cluster)
heatmap(as.matrix(sq_dist))
Rowv = clust_1$cluster,
heatmap(as.matrix(sq_dist)
Rowv = clust_1$cluster,
heatmap(as.matrix(sq_dist),
Rowv = clust_1$cluster,
col = hcl.colors(256))
hcl.pals
hcl.pals()
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
heatmap(as.matrix(sq_dist),
Rowv = clust_1$cluster,
col = hcl.colors(256, palette = "Magma"))
hcl.pals()
heatmap(as.matrix(sq_dist),
Rowv = clust_1$cluster,
col = hcl.colors(256, palette = "Geyser"))
heatmap(as.matrix(sq_dist),
Rowv = clust_1$cluster,
col = hcl.colors(256, palette = "Inferno"))
heatmap(as.matrix(sq_dist),
Rowv = clust_1$cluster,
col = hcl.colors(256, palette = "Inferno", rev = T))
clust_1 <- agnes(sq_dist)
fviz_dend(clust_1, cex = .5)
clust_1 <- agnes(sq_dist, diss = T)
fviz_dend(clust_1, cex = .5)
clust_1 <- agnes(as.matrix(sq_dist), diss = T)
fviz_dend(clust_1, cex = .5)
clust_1 <- agnes(sq_dist, diss = T, method = "ward")
fviz_dend(clust_1, cex = .5)
clust_1 <- hclust(sq_dist, diss = T, method = "ward")
clust_1 <- hclust(sq_dist, method = "ward")
clust_1 <- hclust(sq_dist, method = "ward.d2")
clust_1 <- hclust(sq_dist, method = "ward.D2")
fviz_dend(clust_1, cex = .5)
clust_1 <- agnes(sq_dist, method = "ward")
fviz_dend(clust_1, cex = .5)
clust_1 <- agnes(diss = sq_dist, method = "ward")
fviz_dend(clust_1, cex = .5)
clust_1 <- agnes(diss = sq_dist, method = "ward")
clust_1 <- agnes(sq_dist, diss = T, method = "ward")
fviz_dend(clust_1, cex = .5)
heatmap(as.matrix(sq_dist),
Rowv = clust_1$cluster,
col = hcl.colors(256, palette = "Inferno", rev = T))
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
heatmap(df,
Rowv = clust_1$cluster,
col = hcl.colors(256, palette = "Inferno", rev = T))
heatmap(df,
Rowv = NA,
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256, palette = "Inferno", rev = T))
df
heatmap(as.matrix(df),
Rowv = NA,
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256, palette = "Inferno", rev = T))
heatmap(as.matrix(df),
# Rowv = NA,
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256, palette = "Inferno", rev = T))
heatmap(as.matrix(df),
# Rowv = NA,
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256, palette = "Inferno", rev = T))
heatmap(as.matrix(df),
# Rowv = NA,
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256, palette = "Inferno"))
heatmap(as.matrix(df),
# Rowv = NA,
Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256, palette = "Inferno"))
heatmap(as.matrix(df),
# Rowv = NA,
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = function(x) hclust(x, method = "ward.D2"),
col = hcl.colors(256, palette = "Inferno"))
heatmap(as.matrix(df),
# Rowv = NA,
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = hcut),
heatmap(as.matrix(df),
# Rowv = NA,
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = hcut,
col = hcl.colors(256, palette = "Inferno"))
heatmap(as.matrix(df),
# Rowv = NA,
# Colv = NA,
distfun = function(x) (vegdist(x)),
hclustfun = hcut,
col = hcl.colors(256, palette = "Inferno"))
sqrt
heatmap(as.matrix(df),
# Rowv = NA,
# Colv = NA,
distfun = function(x) sqrt(vegdist(x)),
hclustfun = hcut,
col = hcl.colors(256, palette = "Inferno"))
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "silhouette")
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "wss")
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "gap_stat", verbose = F)
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "silhouette")
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "wss")
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "gap_stat", verbose = F)
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "silhouette") + theme_minimal()
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "silhouette") + theme_minimal()
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "wss")
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "gap_stat", verbose = F)
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "silhouette") + theme_classic()
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "silhouette") + theme_classic(base_size = 8)
grid.arrange
gridExtra::grid.arrange(sil, wss, gap, nrow=1)
sil <- fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "silhouette") + theme_classic(base_size = 8)
wss <- fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "wss") + theme_classic(base_size = 8)
gap <- fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "gap_stat", verbose = F) + theme_classic(base_size = 8)
gridExtra::grid.arrange(sil, wss, gap, nrow=1)
sil <- fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "silhouette") + theme_classic(base_size = 8)
wss <- fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "wss") + theme_classic(base_size = 8)
gap <- fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "gap_stat", verbose = F) + theme_classic(base_size = 8)
gridExtra::grid.arrange(sil, wss, gap, nrow=1)
sil <- fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "silhouette") + theme_classic(base_size = 8)
wss <- fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "wss") + theme_classic(base_size = 8)
gap <- fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "gap_stat", verbose = F) + theme_classic(base_size = 8)
gridExtra::grid.arrange(sil, wss, gap, nrow=1)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(vegan, fossil, factoextra, cluster, NbClust, ggthemes, gridExtra, pander, broom, caret, tidyverse)
grid.arrange
grid.arrange(
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "silhouette") + theme_classic(base_size = 8),
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "wss") + theme_classic(base_size = 8),
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "gap_stat", verbose = F) + theme_classic(base_size = 8))
grid.arrange(
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "silhouette") + theme_classic(base_size = 8),
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "wss") + theme_classic(base_size = 8),
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "gap_stat", verbose = F) + theme_classic(base_size = 8),
nrow = 1)
grid.arrange(
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "silhouette") +
theme_classic(base_size = 8),
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "wss") +
theme_classic(base_size = 8),
fviz_nbclust(df, diss = sq_dist, FUNcluster = hcut, method = "gap_stat", verbose = F) +
theme_classic(base_size = 8),
nrow = 1)
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
pacman::p_load(vegan, fossil, factoextra, cluster, NbClust, ggthemes, gridExtra, pander, broom, caret, tidyverse)
fviz_dist(sq_dist, lab_size = 5) + scale_fill_viridis_c(direction = -1, option = "A")
fviz_dist(sq_dist, lab_size = 5) + scale_fill_viridis_c(direction = -1, option = "A") + scale_color_manual(values = c("black"))
fviz_dist(sq_dist, lab_size = 5)
fviz_dist(sq_dist, lab_size = 5, gradient = list("black", "green", "red"))
fviz_dist(sq_dist, lab_size = 5, gradient = list(low = "black", mid = "green", highr = "red"))
fviz_dist(sq_dist, lab_size = 5, gradient = list(low = "black", highr = "red"))
fviz_dist(sq_dist, lab_size = 5, gradient = list(low = "black", high = "red"))
fviz_dist(sq_dist, lab_size = 5)
fviz_dist(sq_dist, lab_size = 5) + scale_fill_viridis_c(direction = -1, option = "A")
fviz_dist(sq_dist, lab_size = 5) + scale_fill_viridis_c(direction = -1, option = "A") + aes(color = 1)
fviz_dist(sq_dist, lab_size = 5) + scale_fill_viridis_c(direction = -1, option = "A") + aes(color = value)
fviz_dist(sq_dist, lab_size = 5) + scale_fill_viridis_c(direction = -1, option = "A") + aes(color = value) +scale_color_viridis_c(direction = -1, option = "A")
fviz_dist(sq_dist, lab_size = 5) +
scale_fill_viridis_c(direction = -1, option = "A") +
aes(color = value) +
scale_color_viridis_c(direction = -1, option = "A")
fviz_dist(sq_dist, lab_size = 5) +
aes(color = value) +
scale_fill_viridis_c(direction = -1, option = "A") +
scale_color_viridis_c(direction = -1, option = "A") +
guides(color = NULL)
fviz_dist(sq_dist, lab_size = 5) +
aes(color = value) +
scale_fill_viridis_c(direction = -1, option = "A") +
scale_color_viridis_c(direction = -1, option = "A") +
guides(fill = NULL)
fviz_dist(sq_dist, lab_size = 5) +
aes(color = value) +
scale_fill_viridis_c(direction = -1, option = "A") +
scale_color_viridis_c(direction = -1, option = "A") +
guides(fill = NA)
fviz_dist(sq_dist, lab_size = 5) +
aes(color = value) +
scale_fill_viridis_c(direction = -1, option = "A") +
scale_color_viridis_c(direction = -1, option = "A") +
guides(fill = F)
fviz_dist(sq_dist, lab_size = 5) +
aes(color = value) +
scale_fill_viridis_c(direction = -1, option = "A") +
scale_color_viridis_c(direction = -1, option = "A") +
guides(fill = F, color = F)
set.seed(41)
get_clust_tendency(df, nrow(df)-1, graph = F)$hopkins_stat
fviz_dist(sq_dist, lab_size = 5) +
aes(color = value) +
scale_fill_viridis_c(direction = -1, option = "A") +
scale_color_viridis_c(direction = -1, option = "A") +
guides(fill = F, color = F)
set.seed(41)
get_clust_tendency(df, nrow(df)-1, graph = F)$hopkins_stat
fviz_dist(sq_dist, lab_size = 5) +
aes(color = value) +
scale_fill_viridis_c(direction = -1, option = "A") +
scale_color_viridis_c(direction = -1, option = "A") +
guides(fill = F, color = F)
clust_1 <- agnes(sq_dist, diss = T, method = "ward")
fviz_dend(clust_1, cex = .5)
fviz_dend(clust_1, cex = .5lwd = .6)
fviz_dend(clust_1, cex = .5, lwd = .6)
fviz_dend(clust_1, cex = .5, lwd = .5)
fviz_dend(clust_1, cex = .5, lwd = .1)
fviz_dend(clust_1, cex = .5, lwd = .3)
clust_1 <- agnes(sq_dist, diss = T, method = "ward")
fviz_dend(clust_1, cex = .5, lwd = .3)
fviz_dend(clust_1, cex = .4, lwd = .3)
clust_1 <- agnes(sq_dist, diss = T, method = "ward")
fviz_dend(clust_1, cex = .4, lwd = .3)
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
pacman::p_load(vegan, fossil, factoextra, cluster, NbClust, ggthemes, gridExtra, pander, broom, caret, tidyverse)
species <- c('carcar','corflo','faggra',
'ileopa','liqsty','maggra',
'nyssyl','ostvir','oxyarb',
'pingla','quenig','quemic','symtin')
df <-
read.table("wood.dat", header=T) %>%
select(x,y,species) %>%
unite(rowname, x, y, sep = "-") %>%
column_to_rownames()
# formula 1
(d_bc_1 <- 1 - (2 * sum(pmin(df[1,], df[2,]))) / (sum(df[1,]) + sum(df[2,])))
# formula 2
(d_bc_2 <- sum(abs(df[1,] - df[2,])) / sum(df[1,] + df[2,]))
df_dist <- vegdist(df)
df_dist[1]
tri.ineq(df_dist)
# función modificada para encontrar contrajemeplo. Devuelve el primer contraejemplo que encuentra.
mat <- as.matrix(df_dist)
n <- dim(mat)[1]
for (i in 1:(n - 2)) {
for (j in (i + 1):(n - 1)) {
for (k in (j + 1):n) {
sds <- c(mat[j, i], mat[k, i], mat[k, j])
lng <- max(sds)
if (lng > (sum(sds) - lng)){
return()}
}
}
}
# no se satisface para las muestras:
rownames(mat)[j]
rownames(mat)[i]
rownames(mat)[k]
# cuadrado de las distancias
sq_dist <- sqrt(df_dist)
tri.ineq(sq_dist)
is_euclidean <- function(diss){
mat <- as.matrix(diss)
n <- dim(mat)[1]
A <- mat * -(1/2)
H <- diag(n) - (1/n) * (rep(1,n) %*% t(rep(1,n)))
B <- H %*% A %*% H
# prueba
eig <- eigen(B)
all(eig$values >= 0)
}
# probamos con la raiz cuadrada de la distancia
is_euclidean(sq_dist)
set.seed(41)
get_clust_tendency(df, nrow(df)-1, graph = F)$hopkins_stat
fviz_dist(sq_dist, lab_size = 5) +
# hay un 'bug' al compilar el pdf, que se ven los bordes de cada 'tile'
# para arreglarlo hay que mapear 'color' a la variable de valor.
aes(color = value) +
scale_fill_viridis_c(direction = -1, option = "A") +
scale_color_viridis_c(direction = -1, option = "A") +
guides(fill = F, color = F)
clust_1 <- agnes(sq_dist, diss = T, method = "ward")
fviz_dend(clust_1, cex = .4, lwd = .3)
