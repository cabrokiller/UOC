fviz_nbclust(df, diss = sq_dist, FUNcluster = pam, method = "wss") +
theme_classic(base_size = 8),
fviz_nbclust(df, diss = sq_dist, FUNcluster = pam, method = "gap_stat", verbose = F) +
theme_classic(base_size = 8),
nrow = 1)
clust_6 <- hcut(sq_dist, k = 6, hc_func = "agnes", hc_method = "ward.D2")
fviz_dend(clust_6,
palette = hcl.colors(palette = "Zissou 1", 6),
lwd = .5,
cex = .5)
dt <-
df %>%
mutate(cluster = factor(clust_6$cluster)) %>%
group_by(cluster) %>%
summarise_all(median) %>%
# traslocamos el tibble para mejor visualización
gather(especie, value, -cluster) %>%
spread(cluster, value) %>%
mutate(chk = `1` <= 4 & `2` <= 4 & `3` <= 4 & `4` <= 4 & `5` <= 4 & `6` <= 4 ) %>%
filter(!chk) %>% select(-chk) %>%
column_to_rownames('especie')
pander(dt)
ca_df <-
FactoMineR::CA(t(dt), graph = T)
ca_df <-
FactoMineR::CA(dt, graph = T)
pander(ca_df$eig)
fviz_ca_biplot(ca_df, map ="rowprincipal", arrows = c(F,T), repel = T)
load("gorriones.RData")
mod_lg <-
glm(superviv ~ x1 + x2 + x3 + x4 + x5, gorriones, family = binomial(link = "logit"))
mod_NULL <-
glm(superviv ~ 1, gorriones, family = binomial(link = "logit"))
# Para reporducir *con todo detalle* se puede utilizar la sintaxis de dplyr y crear la tabla
tbl <-
tidy(mod_lg) %>%
mutate(
chi_2 = (estimate / std.error) ^ 2,
Variable = c(
"Constant",
"Total length",
"Alar length",
"Length beak and head",
"Length humerus",
"Length keel of sternum"
),
chi_2 = round(chi_2, 2)
) %>%
mutate_at(vars(estimate:p.value), list( ~ round(., 3))) %>%
select(
Variable,
'β estimate' = estimate,
'Standard \\\\ error' = std.error,
'Chi-squared' = chi_2,
'p-Value' = p.value
)
tbl[1,4:5] <- "--"
pander(tbl, justify = "lcccc")
anova(mod_NULL, mod_lg, test = "Chisq")
tibble(
fitted = mod_lg$fitted.values,
class = augment(mod_lg)$superviv
) %>%
rowid_to_column() %>%
group_by(class) %>%
mutate(mean = mean(fitted)) %>%
ggplot(aes(rowid, fitted, shape = class)) +
geom_point(size = 3) +
geom_line(aes(y=mean)) +
scale_shape_manual(values = c("N","S")) +
theme_base(base_size = 10) +
labs(x="Gorriones", y="Probabilidad") +
scale_y_continuous(limits = c(0,1)) +
guides(shape = F)
ypred <-
ifelse(
predict.glm(mod_lg, type = "response") > 0.5,
'S', 'N') %>%
factor()
# para la matriz de confusión se puede utilizar la función de
# la librería `caret`
cm <- confusionMatrix(gorriones$superviv, ypred)
pander(cm$table)
pander(cm$overall)
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
pacman::p_load(vegan, fossil, factoextra, cluster, NbClust, ggthemes, gridExtra, pander, broom, caret, tidyverse)
fviz_dend(clust_6,
palette = hcl.colors(palette = "viridis", 6),
lwd = .5,
cex = .5)
fviz_dend(clust_6,
palette = hcl.colors(palette = "viridis", 6),
lwd = .5,
cex = .5)
fviz_dend(clust_6,
palette = hcl.colors(palette = "Zissou 1", 6),
lwd = .5,
cex = .5)
pacman::p_load(wesandersen)
clust_6 <- hcut(sq_dist, k = 6, hc_func = "agnes", hc_method = "ward.D2")
fviz_dend(clust_6,
palette = hcl.colors(palette = "Zissou 1", 6),
lwd = .5,
cex = .5)
pacman::p_load(wesandersen)
pacman::p_load(wesandersen)
pacman::p_load(wesandersen)
install.packages("wesanderson")
pacman::p_load(wesandersen)
pacman::p_load(wesanderson)
wes
wes_palette()
wes_palette("Zissou1")
wes_palette("Zissou1", 2)
wes_palette("Zissou1", 6)
wes_palette("Zissou1", 6, type = "continous")
wes_palette("Zissou1", 6, type = "continuous")
fviz_dend(clust_6,
palette = wes_palette("Zissou1", 6, type = "continuous"),
lwd = .5,
cex = .5)
fviz_dend(clust_6,
palette = wes_palette("Royal1", 6, type = "continuous"),
lwd = .5,
cex = .5)
fviz_dend(clust_6,
palette = wes_palette("IsleofDogs1", 6, type = "continuous"),
lwd = .5
cex = .5)
fviz_dend(clust_6,
palette = wes_palette("IsleofDogs1", 6, type = "continuous"),
lwd = .5,
cex = .5)
fviz_dend(clust_6,
palette = wes_palette("IsleofDogs2", 6, type = "continuous"),
lwd = .5,
cex = .5)
fviz_dend(clust_6,
palette = wes_palette("Royal1", 6, type = "continuous"),
lwd = .5,
cex = .5)
fviz_dend(clust_6,
palette = wes_palette("Royal2", 6, type = "continuous"),
lwd = .5,
cex = .5)
RColorBrewer::display.brewer.all()
RColorBrewer::brewer.pal(6, 1, type = "qual")
RColorBrewer::brewer.pal(6, "Accent1", type = "qual")
RColorBrewer::brewer.pal(6, "Accent1")
display.brewer.all(type="div")
RColorBrewer::display.brewer.all(type="div")
RColorBrewer::display.brewer.all(type="qual")
RColorBrewer::brewer.pal(6, "Dark2")
fviz_dend(clust_6,
palette = RColorBrewer::brewer.pal(6, "Dark2"),
lwd = .5,
cex = .5)
```{r warning=FALSE}
clust_6 <- hcut(sq_dist, k = 6, hc_func = "agnes", hc_method = "ward.D2")
fviz_dend(clust_6,
palette = RColorBrewer::brewer.pal(6, "Dark2"),
lwd = .5,
cex = .5)
RColorBrewer::display.brewer.all(type="qual")
RColorBrewer::brewer.pal(6, "Set1")
fviz_dend(clust_6,
palette = RColorBrewer::brewer.pal(6, "Set1"),
lwd = .5,
cex = .5)
fviz_dend(clust_6,
palette = RColorBrewer::brewer.pal(6, "Set2"),
lwd = .5,
cex = .5)
RColorBrewer::display.brewer.all(type="qual")
fviz_dend(clust_6,
palette = RColorBrewer::brewer.pal(6, "Paired"),
lwd = .5,
cex = .5)
RColorBrewer::display.brewer.all(type="qual")
fviz_dend(clust_6,
palette = RColorBrewer::brewer.pal(6, "Dark2"),
lwd = .5,
cex = .5)
solarized_pal()(6)
fviz_dend(clust_6,
palette = solarized_pal()(6),
lwd = .5,
cex = .5)
ca_df <-
FactoMineR::CA(t(dt), graph = T)
ca_df <-
FactoMineR::CA(dt, graph = T)
pander(ca_df$eig)
fviz_ca_biplot(ca_df, map ="rowprincipal", arrows = c(F,T), repel = T)
fviz_ca_biplot(ca_df, map ="colprincipal", arrows = c(F,T), repel = T)
fviz_ca_biplot(ca_df, map ="rowprincipal", arrows = c(F,T), repel = T)
fviz_ca_biplot(ca_df, map ="colprincipal", arrows = c(F,T), repel = T)
pander(ca_df$eig)
ca_df <-
FactoMineR::CA(dt, graph = F)
pander(ca_df$eig)
fviz_ca_biplot(ca_df, map ="rowprincipal", arrows = c(F,T), repel = T)
fviz_ca_biplot(ca_df, map ="colprincipal", arrows = c(F,T), repel = T)
fviz_ca_biplot(ca_df, map ="rowprincipal", arrows = c(F,T), repel = T)
fviz_ca_biplot(ca_df, map ="rowprincipal", arrows = c(T,T), repel = T)
fviz_ca_biplot(ca_df, map ="rowprincipal", arrows = c(T,F), repel = T)
fviz_ca_biplot(ca_df, map ="rowprincipal", arrows = c(F,F), repel = T)
fviz_ca_biplot(ca_df, map ="colprincipal", arrows = c(F,F), repel = T)
fviz_ca_biplot(ca_df, map ="rowprincipal", arrows = c(F,F), repel = T)
fviz_ca_biplot(ca_df, map ="colprincipal", arrows = c(F,F), repel = T)
fviz_ca_biplot(ca_df, map ="colprincipal", arrows = c(F,T), repel = T)
fviz_ca_biplot(ca_df, map ="colprincipal", arrows = c(T,F), repel = T)
# Para reporducir *con todo detalle* se puede utilizar la sintaxis de dplyr
# y crear la tabla
tbl <-
tidy(mod_lg) %>%
mutate(
chi_2 = (estimate / std.error) ^ 2,
Variable = c("Constant", "Total length","Alar length", "Length beak and head",
"Length humerus", "Length keel of sternum"),
chi_2 = round(chi_2, 2)) %>%
mutate_at(vars(estimate:p.value), list( ~ round(., 3))) %>%
select(
Variable, 'β estimate' = estimate, 'Standard error' = std.error,
'Chi-squared' = chi_2, 'p-Value' = p.value)
tbl[1,4:5] <- "--"
pander(tbl, justify = "lcccc")
anova(mod_NULL, mod_lg, test = "Chisq")
anova(mod_NULL, mod_lg, test = "Chisq") %>%
pander()
# knitr options
knitr::opts_chunk$set(echo = TRUE)
# Install packages
# Load packages
# ...
library(knitr)
# Input / Output variables
# Tuning parameters
# ...
file1 <- "usedcars.csv"
Sys.Date()
# access the second element in body temperature vector
temperature[2]
# create vectors of data for three medical patients
subject_name <- c("John Doe", "Jane Doe", "Steve Graves")
temperature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
# access the second element in body temperature vector
temperature[2]
## examples of accessing items in vector
# include items in the range 2 to 3
temperature[2:3]
# exclude item 2 using the minus sign
temperature[-2]
# use a vector to indicate whether to include item
temperature[c(TRUE, TRUE, FALSE)]
render("3_ML/unidad_1/InitialFile.Rmd", output_format = "pdf")
library(rmarkdown)
render("3_ML/unidad_1/InitialFile.Rmd", output_format = "pdf")
render("3_ML/unidad_1/InitialFile.Rmd", output_format = "pdf_document")
par(mfrow=c(2,2))
hist(usedcars$mileage, xlab="Mileage", main="Histogram of mileage",col="grey85")
hist(usedcars$price, xlab="Price", main="Histogram of price",col="grey85")
usedcars$transmission <- factor(usedcars$transmission)
plot(usedcars$mileage, usedcars$price, pch=16,
col=usedcars$transmission,xlab="Mileage", ylab="Price")
legend("topright", pch=16, c("AUTO","MANUAL"), col=1:2, cex=0.5)
par(mfrow=c(2,2))
hist(usedcars$mileage, xlab="Mileage", main="Histogram of mileage",col="grey85")
hist(usedcars$price, xlab="Price", main="Histogram of price",col="grey85")
usedcars$transmission <- factor(usedcars$transmission)
plot(usedcars$mileage, usedcars$price, pch=16,
col=usedcars$transmission,xlab="Mileage", ylab="Price")
legend("topright", pch=16, c("AUTO","MANUAL"), col=1:2, cex=0.5)
par(mfrow=c(2,2))
hist(usedcars$mileage, xlab="Mileage", main="Histogram of mileage",col="grey85")
hist(usedcars$price, xlab="Price", main="Histogram of price",col="grey85")
usedcars$transmission <- factor(usedcars$transmission)
plot(usedcars$mileage, usedcars$price, pch=16,
col=usedcars$transmission,xlab="Mileage", ylab="Price")
legend("topright", pch=16, c("AUTO","MANUAL"), col=1:2, cex=0.5)
par(mfrow=c(2,2))
hist(usedcars$mileage, xlab="Mileage", main="Histogram of mileage",col="grey85")
hist(usedcars$price, xlab="Price", main="Histogram of price",col="grey85")
usedcars$transmission <- factor(usedcars$transmission)
plot(usedcars$mileage, usedcars$price, pch=16,
col=usedcars$transmission,xlab="Mileage", ylab="Price")
legend("topright", pch=16, c("AUTO","MANUAL"), col=1:2, cex=0.5)
par(mfrow=c(2,2))
hist(usedcars$mileage, xlab="Mileage", main="Histogram of mileage",col="grey85")
hist(usedcars$price, xlab="Price", main="Histogram of price",col="grey85")
usedcars$transmission <- factor(usedcars$transmission)
plot(usedcars$mileage, usedcars$price, pch=16,
col=usedcars$transmission,xlab="Mileage", ylab="Price")
legend("topright", pch=16, c("AUTO","MANUAL"), col=1:2, cex=0.5)
boxplot(usedcars$mileage, main="Boxplot of Used Car Mileage",
ylab="Odometer (mi.)")
# histograms of used car prices and mileage
hist(usedcars$price, main = "Histogram of Used Car Prices",
xlab = "Price ($)")
hist(usedcars$mileage, main = "Histogram of Used Car Mileage",
xlab = "Odometer (mi.)")
# variance and standard deviation of the used car data
var(usedcars$price)
sd(usedcars$price)
var(usedcars$mileage)
sd(usedcars$mileage)
par(mfrow=c(2,2))
hist(usedcars$mileage, xlab="Mileage", main="Histogram of mileage",col="grey85")
hist(usedcars$price, xlab="Price", main="Histogram of price",col="grey85")
usedcars$transmission <- factor(usedcars$transmission)
plot(usedcars$mileage, usedcars$price, pch=16,
col=usedcars$transmission,xlab="Mileage", ylab="Price")
legend("topright", pch=16, c("AUTO","MANUAL"), col=1:2, cex=0.5)
render("3_ML/unidad_1/InitialFile.Rmd", "all")
# boxplot of used car prices and mileage
boxplot(usedcars$price, main="Boxplot of Used Car Prices",ylab="Price ($)")
boxplot(usedcars$mileage, main="Boxplot of Used Car Mileage",
ylab="Odometer (mi.)")
# histograms of used car prices and mileage
hist(usedcars$price, main = "Histogram of Used Car Prices",
xlab = "Price ($)")
# histograms of used car prices and mileage
hist(usedcars$price, main = "Histogram of Used Car Prices",
xlab = "Price ($)")
hist(usedcars$mileage, main = "Histogram of Used Car Mileage",
xlab = "Odometer (mi.)")
hist(usedcars$mileage, main = "Histogram of Used Car Mileage",
xlab = "Odometer (mi.)")
# boxplot of used car prices and mileage
boxplot(usedcars$price, main="Boxplot of Used Car Prices",ylab="Price ($)")
boxplot(usedcars$mileage, main="Boxplot of Used Car Mileage",
ylab="Odometer (mi.)")
# histograms of used car prices and mileage
hist(usedcars$price, main = "Histogram of Used Car Prices",
xlab = "Price ($)")
hist(usedcars$mileage, main = "Histogram of Used Car Mileage",
xlab = "Odometer (mi.)")
# boxplot of used car prices and mileage
boxplot(usedcars$price, main="Boxplot of Used Car Prices",ylab="Price ($)")
boxplot(usedcars$mileage, main="Boxplot of Used Car Mileage",
ylab="Odometer (mi.)")
# histograms of used car prices and mileage
hist(usedcars$price, main = "Histogram of Used Car Prices",
xlab = "Price ($)")
hist(usedcars$mileage, main = "Histogram of Used Car Mileage",
xlab = "Odometer (mi.)")
# boxplot of used car prices and mileage
boxplot(usedcars$price, main="Boxplot of Used Car Prices",ylab="Price ($)")
boxplot(usedcars$mileage, main="Boxplot of Used Car Mileage",
ylab="Odometer (mi.)")
# histograms of used car prices and mileage
hist(usedcars$price, main = "Histogram of Used Car Prices",
xlab = "Price ($)")
hist(usedcars$mileage, main = "Histogram of Used Car Mileage",
xlab = "Odometer (mi.)")
# boxplot of used car prices and mileage
boxplot(usedcars$price, main="Boxplot of Used Car Prices",ylab="Price ($)")
boxplot(usedcars$mileage, main="Boxplot of Used Car Mileage",
ylab="Odometer (mi.)")
hist(usedcars$mileage, main = "Histogram of Used Car Mileage",
xlab = "Odometer (mi.)")
par(mfrow=c(2,2))
hist(usedcars$mileage, xlab="Mileage", main="Histogram of mileage",col="grey85")
hist(usedcars$price, xlab="Price", main="Histogram of price",col="grey85")
usedcars$transmission <- factor(usedcars$transmission)
plot(usedcars$mileage, usedcars$price, pch=16,
col=usedcars$transmission,xlab="Mileage", ylab="Price")
legend("topright", pch=16, c("AUTO","MANUAL"), col=1:2, cex=0.5)
```{r mean_code, ref.label = "means", echo = TRUE, results = "hide"}
```{r mean_code, ref.label = "means", echo = TRUE, results = "hide"}
# knitr options
knitr::opts_chunk$set(echo = TRUE, fig.show =  "hold", collapse = T)
# variance and standard deviation of the used car data
var(usedcars$price)
sd(usedcars$price)
var(usedcars$mileage)
sd(usedcars$mileage)
```{r plot1_code, ref.label = "plot1", echo = TRUE, fig.show = "hide", fig.keep = "none"}
```{r var_code, ref.label = "vars", echo = TRUE, results = "hide"}
# histograms of used car prices and mileage
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
# knitr options
knitr::opts_chunk$set(echo = T, fig.pos = 'p')
par(mfrow=c(2,2))
hist(usedcars$mileage, xlab="Mileage", main="Histogram of mileage",col="grey85")
hist(usedcars$price, xlab="Price", main="Histogram of price",col="grey85")
usedcars$transmission <- factor(usedcars$transmission)
plot(usedcars$mileage, usedcars$price, pch=16,
col=usedcars$transmission,xlab="Mileage", ylab="Price")
legend("topright", pch=16, c("AUTO","MANUAL"), col=1:2, cex=0.5)
render("3_ML/unidad_1/InitialFile.Rmd", "all")
# knitr options
knitr::opts_chunk$set(echo = TRUE, fig.pos = 'p', out.extra = '')
par(mfrow=c(2,2))
hist(usedcars$mileage, xlab="Mileage", main="Histogram of mileage",col="grey85")
hist(usedcars$price, xlab="Price", main="Histogram of price",col="grey85")
usedcars$transmission <- factor(usedcars$transmission)
plot(usedcars$mileage, usedcars$price, pch=16,
col=usedcars$transmission,xlab="Mileage", ylab="Price")
legend("topright", pch=16, c("AUTO","MANUAL"), col=1:2, cex=0.5)
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
# create vectors of data for three medical patients
subject_name <- c("John Doe", "Jane Doe", "Steve Graves")
temperature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
## examples of accessing items in vector
# include items in the range 2 to 3
temperature[2:3]
# exclude item 2 using the minus sign
temperature[-2]
# use a vector to indicate whether to include item
temperature[c(TRUE, TRUE, FALSE)]
##### Exploring and understanding data --------------------
## data exploration example using used car data
usedcars <- read.csv(file1, stringsAsFactors = FALSE)
# get structure of used car data
str(usedcars)
# Table of 6 first registers
kable(head(usedcars), caption = "6 first registers of data")
# knitr options
knitr::opts_chunk$set(echo = TRUE, fig.pos = 'p', out.extra = '')
# Input / Output variables
# Tuning parameters
# ...
file1 <- "usedcars.csv"
# create vectors of data for three medical patients
subject_name <- c("John Doe", "Jane Doe", "Steve Graves")
temperature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
# access the second element in body temperature vector
temperature[2]
## Exploring numeric variables -----
# summarize numeric variables
summary(usedcars$year)
summary(usedcars[c("price", "mileage")])
# calculate the mean income
(36000 + 44000 + 56000) / 3
mean(c(36000, 44000, 56000))
# the median income
median(c(36000, 44000, 56000))
# the min/max of used car prices
range(usedcars$price)
# the difference of the range
diff(range(usedcars$price))
# IQR for used car prices
IQR(usedcars$price)
# use quantile to calculate five-number summary
quantile(usedcars$price)
# the 99th percentile
quantile(usedcars$price, probs = c(0.01, 0.99))
# quintiles
quantile(usedcars$price, seq(from = 0, to = 1, by = 0.20))
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
knit_with_parameters('~/UOC/3_ML/unidad_1/InitialFile.Rmd')
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
# boxplot of used car prices and mileage
boxplot(usedcars$price, main="Boxplot of Used Car Prices",ylab="Price ($)")
render("3_ML/unidad_1/InitialFile.Rmd", "all")
render("3_ML/unidad_1/InitialFile.Rmd", "html_document")
render("3_ML/unidad_1/InitialFile.Rmd", "html_document")
par(mfrow=c(2,2))
hist(usedcars$mileage, xlab="Mileage", main="Histogram of mileage",col="grey85")
hist(usedcars$price, xlab="Price", main="Histogram of price",col="grey85")
usedcars$transmission <- factor(usedcars$transmission)
plot(usedcars$mileage, usedcars$price, pch=16,
col=usedcars$transmission,xlab="Mileage", ylab="Price")
legend("topright", pch=16, c("AUTO","MANUAL"), col=1:2, cex=0.5)
render("3_ML/unidad_1/InitialFile.Rmd", "html_document")
render("3_ML/unidad_1/InitialFile.Rmd", "html_document")
par(mfrow=c(2,2))
hist(usedcars$mileage, xlab="Mileage", main="Histogram of mileage",col="grey85")
hist(usedcars$price, xlab="Price", main="Histogram of price",col="grey85")
usedcars$transmission <- factor(usedcars$transmission)
plot(usedcars$mileage, usedcars$price, pch=16,
col=usedcars$transmission,xlab="Mileage", ylab="Price")
legend("topright", pch=16, c("AUTO","MANUAL"), col=1:2, cex=0.5)
render("3_ML/unidad_1/InitialFile.Rmd", "html_document")
par(mfrow=c(2,2))
hist(usedcars$mileage, xlab="Mileage", main="Histogram of mileage",col="grey85")
hist(usedcars$price, xlab="Price", main="Histogram of price",col="grey85")
usedcars$transmission <- factor(usedcars$transmission)
plot(usedcars$mileage, usedcars$price, pch=16,
col=usedcars$transmission,xlab="Mileage", ylab="Price")
legend("topright", pch=16, c("AUTO","MANUAL"), col=1:2, cex=0.5)
render("3_ML/unidad_1/InitialFile.Rmd", "html_document")
render("3_ML/unidad_1/InitialFile.Rmd", "html_document")
render("3_ML/unidad_1/InitialFile.Rmd", "html_document")
par(mfrow=c(2,2))
hist(usedcars$mileage, xlab="Mileage", main="Histogram of mileage",col="grey85")
hist(usedcars$price, xlab="Price", main="Histogram of price",col="grey85")
usedcars$transmission <- factor(usedcars$transmission)
plot(usedcars$mileage, usedcars$price, pch=16,
col=usedcars$transmission,xlab="Mileage", ylab="Price")
legend("topright", pch=16, c("AUTO","MANUAL"), col=1:2, cex=0.5)
render("3_ML/unidad_1/InitialFile.Rmd", "html_document")
